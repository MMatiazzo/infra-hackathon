name: Terraform Create Database Autenticacao Workflow

on:
  push:
    branches:
      - master
    paths:
      - 'db/autenticacao/**'
  pull_request:
    branches:
      - master
    paths:
      - 'db/autenticacao/**'
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SECRETS_ARN_RDS: ${{ secrets.AWS_SECRETS_ARN_RDS }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  RDS_SECRETS_DB_USERNAME: ${{ secrets.RDS_SECRETS_DB_USERNAME }}
  RDS_SECRETS_DB_PASSWORD: ${{ secrets.RDS_SECRETS_DB_PASSWORD }}

jobs:
  plan:
    name: "terraform plan and apply"
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Map AWS secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        id: aws-secrets
        with:
          secret-ids: |
            ${{ secrets.AWS_SECRETS_ARN_RDS }}
          parse-json-secrets: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.7.4

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plandev
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="db_username=${{ env.RDS_SECRETS_DB_USERNAME }}" -var="db_password=${{ env.RDS_SECRETS_DB_PASSWORD }}"

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plandev.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.PLAN}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })